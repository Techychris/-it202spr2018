{
  "_args": [
    [
      {
        "raw": "react-dom-camera",
        "scope": null,
        "escapedName": "react-dom-camera",
        "name": "react-dom-camera",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/chrisv/playground/hmk/it202spr2018/projects/big_project"
    ]
  ],
  "_from": "react-dom-camera@latest",
  "_id": "react-dom-camera@0.3.2",
  "_inCache": true,
  "_location": "/react-dom-camera",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-dom-camera-0.3.2.tgz_1515029498836_0.7459652405232191"
  },
  "_npmUser": {
    "name": "arjanj",
    "email": "hello@arjanjassal.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "fbjs": "0.8.16",
    "loose-envify": "1.3.1",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "react-dom-camera",
    "scope": null,
    "escapedName": "react-dom-camera",
    "name": "react-dom-camera",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-dom-camera/-/react-dom-camera-0.3.2.tgz",
  "_shasum": "d0716002d500bb15d4592032500f7fffe1a9f3cf",
  "_shrinkwrap": null,
  "_spec": "react-dom-camera",
  "_where": "/home/chrisv/playground/hmk/it202spr2018/projects/big_project",
  "dependencies": {
    "prop-types": "15.6.0",
    "react": "16.0.0",
    "react-dom": "16.0.0",
    "throttle-debounce": "^1.0.1"
  },
  "description": "A flexible camera component for React DOM; take photos using the latest WebRTC API's.",
  "devDependencies": {
    "react-scripts": "1.0.0",
    "styled-components": "^2.4.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RSJtrn1ZLu8Pd3OCbxnRN+3cgY+b/NEprEK17PorAcXsPY0sJuvtf/L/Y7KbBUXjT6r9ciQFVyryaQ1NmUP2Rw==",
    "shasum": "d0716002d500bb15d4592032500f7fffe1a9f3cf",
    "tarball": "https://registry.npmjs.org/react-dom-camera/-/react-dom-camera-0.3.2.tgz"
  },
  "gitHead": "3123d857c185b049c8af29cb8fc7fa96010d5c41",
  "license": "MIT",
  "main": "./src/camera/Camera.js",
  "maintainers": [
    {
      "name": "arjanj",
      "email": "hello@arjanjassal.com"
    }
  ],
  "name": "react-dom-camera",
  "optionalDependencies": {},
  "readme": "# React Camera\n\nA flexible camera component for React DOM; take photos using the latest WebRTC API's.\n\n## Installation\n\nReact Camera is designed to be installed through NPM and imported as an ES6 module.\n\n```\nnpm install react-dom-camera\n```\n\nThen import it into your project.\n\n```javascript\nimport Camera from 'react-dom-camera';\n```\n\n## Usage\n\nHere is a basic example of how to use React Camera in a React app. This will render the Camera component \"out of the box\".\n\n```javascript\nimport React from 'react';\nimport Camera from 'react-dom-camera';\n\nconst App = () => <Camera />;\n```\n\n### Taking a photo ðŸ“¸\n\nReact Camera is setup to take an image of the current frame when the capture button is clicked, however, to access the image you must use the `onTakePhoto` prop which passes you the image. The `image` can be set as the `src` value on an `<img>` element for example.\n\n```javascript\nimport React from 'react';\nimport Camera from 'react-dom-camera';\n\nconst App = () => (\n  <Camera\n    onTakePhoto={image =>\n      console.log(image, 'do whatever you want with the image')\n    }\n  />\n);\n```\n\n### Custom capture button\n\nIf you're not a fan of the default capture button you can easily use your own component(s) instead. Use the `captureButtonRenderer` prop and pass in a stateless component.\n\n```javascript\nimport React from 'react';\nimport Camera from 'react-dom-camera';\n\nconst CoolButton = ({ onClick }) => (\n  <button onClick={onClick} type=\"button\">\n    Take photo\n  </button>\n);\n\nconst App = () => (\n  <Camera\n    captureButtonRenderer={onClick => <CoolButton onClick={onClick} />}\n    onTakePhoto={image =>\n      console.log(image, 'do whatever you want with the image')\n    }\n  />\n);\n```\n\n## Props\n\n| Property              | Type     | Default     | Description                                                                                                     |\n| --------------------- | -------- | ----------- | --------------------------------------------------------------------------------------------------------------- |\n| captureButtonRenderer | function | undefined   | Renders a custom capture button that is used to take the photo.                                                 |\n| facingMode            | string   | ENVIRONMENT | The default facing mode to use, E.g. Environment or User.                                                       |\n| height                | number   | undefined   | The ideal height of the video.                                                                                  |\n| onStopMediaStream     | function | undefined   | This function is called when the video stops streaming.                                                         |\n| onTakePhoto           | function | undefined   | This function is called when the capture button is pressed. The captured `image` is passed as an argument here. |\n| responsive            | boolean  | true        | Applies `width: 100%` to the `video` element so it fills the container it's in.                                 |\n| width                 | number   | undefined   | The ideal width of the video.                                                                                   |\n\n## Browser support\n\n[ðŸ”— caniuse.com](https://caniuse.com/#feat=stream)\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "react-scripts build",
    "deploy": "git push origin :gh-pages && git subtree push --prefix build origin gh-pages",
    "eject": "react-scripts eject",
    "start": "react-scripts start",
    "test": "react-scripts test --env=jsdom"
  },
  "version": "0.3.2"
}
